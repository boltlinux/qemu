#!/usr/bin/make -f
SHELL = /bin/sh -e

# get DEB_VERSION
include /usr/share/dpkg/pkg-info.mk
# get DEB_HOST_ARCH DEB_HOST_ARCH_OS DEB_HOST_GNU_TYPE DEB_HOST_MULTIARCH DEB_BUILD_GNU_TYPE
include /usr/share/dpkg/architecture.mk
# get CFLAGS LDFLAGS etc
include /usr/share/dpkg/buildflags.mk

libdir = /usr/lib/${DEB_HOST_MULTIARCH}

# support parallel build using DEB_BUILD_OPTIONS=parallel=N
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
  MAKEFLAGS += -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

# verbose build
V ?= 1

FIRMWAREPATH = /usr/share/qemu:/usr/share/seabios:/usr/lib/ipxe/qemu

# we add another set of configure options from debian/control
common_configure_opts = \
	--with-pkgversion="Bolt $(DEB_VERSION)" \
	--extra-cflags="$(CFLAGS) $(CPPFLAGS)" --extra-ldflags="$(LDFLAGS) -Wl,--as-needed" \
	--prefix=/usr \
	--sysconfdir=/etc \
	--libdir=${libdir} \
	--libexecdir=/usr/lib/qemu \
	--firmwarepath=${FIRMWAREPATH} \
	--localstatedir=/var \
	--disable-blobs \
	--disable-strip \
	--interp-prefix=/etc/qemu-binfmt/%M \
	--localstatedir=/var

# list of linux-user targets, from ./configure
user_targets = \
 i386 x86_64 alpha aarch64 aarch64_be arm armeb cris hppa m68k microblaze microblazeel \
 mips mipsel mips64 mips64el mipsn32 mipsn32el nios2 or1k \
 ppc ppc64 ppc64abi32 ppc64le riscv32 riscv64 sh4 sh4eb sparc sparc64 sparc32plus \
 s390x tilegx xtensa xtensaeb

b/configure-stamp: configure
	dh_testdir

	# system build
	rm -rf b/qemu; mkdir -p b/qemu
	cd b/qemu && \
	    ../../configure ${common_configure_opts} --disable-user \
		--disable-system \
		--enable-linux-user \
		--disable-xen \
		--enable-modules \
		--enable-module-upgrades \
		$(shell sh debian/extract-config-opts \
		    $(DEB_HOST_ARCH_OS)-$(DEB_HOST_ARCH) debian/control) \
		$(QEMU_CONFIGURE_OPTIONS) || \
	 { echo ===== CONFIGURE FAILED ===; tail -n 50 b/qemu/config.log; exit 1; }

	# do not use debian/configure-opts here, all optional stuff will be enabled
	# automatically, dependencies are already verified in the main build
	rm -rf b/user-static; mkdir -p b/user-static
	cd b/user-static && \
	    ../../configure ${common_configure_opts} \
		--static --disable-system --disable-xen \
		--target-list="$(addsuffix -linux-user,${user_targets})"
	touch $@

build-arch: b/build-stamp
b/build-stamp: b/configure-stamp
	dh_testdir

	# user-static build
	# we use this invocation to build just the binaries
	$(MAKE) -C b/user-static V=${V} $(patsubst %,%-linux-user/all,${user_targets})
	sed -e 's/qemu\\-user\\-static/qemu\\-user/g' \
	    -e 's/ (static version)//' \
	    debian/qemu-user-static.1 > debian/qemu-user.1
	touch $@

binary-arch:
	dh_testdir
	dh_testroot
	dh_prep -a
	dh_installdirs -a

	# qemu-user-static
	mkdir -p debian/qemu-user-static-bolt/usr/bin debian/qemu-user-static-bolt/usr/share/man/man1
	for t in ${user_targets}; do \
	   cp -p b/user-static/$$t-linux-user/qemu-$$t \
	       debian/qemu-user-static-bolt/usr/bin/qemu-$$t-static ; \
	   ln -s qemu-user-static.1 \
	       debian/qemu-user-static-bolt/usr/share/man/man1/qemu-$$t-static.1 ; \
	done

	# binfmt support
	./debian/binfmt-install qemu-user-static-bolt

	dh_install -a
	dh_missing --list-missing
	dh_installdocs -a
	dh_installchangelogs -a
	dh_installman -a
	dh_installudev -a
	dh_link -a
	dh_lintian -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_shlibdeps -a
	dh_installdeb -a

	# after shlibdeps finished, grab ${shlibs:Depends} from -user package
	# and transform it into Built-Using field for -user-static.
	# See also dpkg-query bug #588505
	if [ -f debian/qemu-user.substvars ]; then \
	  pkgs=$$(sed -n -e's/([^)]*)//g' -e's/,//g' -e's/^shlibs:Depends=//p' debian/qemu-user.substvars); \
	  srcs=; for p in $$pkgs; do \
	    srcs="$$srcs $$(dpkg-query -f '$${source:Package} (= $${source:Version}),' -W $$p)"; \
	  done ; \
	  echo "built-using=$$srcs" >> debian/qemu-user-static-bolt.substvars ; \
	fi

	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

ifneq (,$(wildcard debian/control-in))
# only include rules for debian/control if debian/control-in is present
debian/control: debian/control-in debian/rules
	echo '# autogenerated file, please edit debian/control-in' > $@.tmp
	sed -e 's/^:$(shell echo ${VENDOR} | tr '[A-Z]' '[a-z]')://' \
		-e '/^:[a-z]*:/D' $< >> $@.tmp
	mv -f $@.tmp $@
	chmod -w $@
endif

build: build-arch
binary: binary-arch

clean:	debian/control
	dh_testdir
	rm -rf b
	find scripts/ -name '*.pyc' -delete || :
	rm -f debian/qemu-user.1
	dh_clean

.PHONY: build clean binary-arch binary-indep binary build-arch build-indep build

get-orig-source:
	./debian/get-orig-source.sh ${DEB_VERSION}

.PHONY: get-orig-source

